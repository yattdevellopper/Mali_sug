# Generated by Django 5.2.1 on 2025-05-20 20:53

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('vendors', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Panier',
                'verbose_name_plural': 'Paniers',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_address_line1', models.CharField(max_length=255)),
                ('shipping_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('shipping_city', models.CharField(max_length=100)),
                ('shipping_state', models.CharField(blank=True, max_length=100, null=True)),
                ('shipping_zip_code', models.CharField(max_length=20)),
                ('shipping_country', models.CharField(max_length=100)),
                ('shipping_phone', models.CharField(blank=True, max_length=20, null=True)),
                ('billing_address_line1', models.CharField(max_length=255)),
                ('billing_address_line2', models.CharField(blank=True, max_length=255, null=True)),
                ('billing_city', models.CharField(max_length=100)),
                ('billing_state', models.CharField(blank=True, max_length=100, null=True)),
                ('billing_zip_code', models.CharField(max_length=20)),
                ('billing_country', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('pending', 'En attente de paiement'), ('processing', 'En cours de traitement'), ('shipped', 'Expédiée'), ('delivered', 'Livrée'), ('cancelled', 'Annulée'), ('refunded', 'Remboursée')], default='pending', max_length=20)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='ID de transaction du paiement')),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant total de la commande')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Acheteur')),
            ],
            options={
                'verbose_name': 'Commande',
                'verbose_name_plural': 'Commandes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_at_purchase', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours (Vendeur)'), ('shipped', 'Expédié (Vendeur)'), ('delivered', 'Livré (Vendeur)'), ('returned', 'Retourné'), ('refunded', 'Remboursé (Article)')], default='pending', max_length=20)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.order')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productvariant')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ordered_items', to='vendors.vendor')),
            ],
            options={
                'verbose_name': 'Article de Commande',
                'verbose_name_plural': 'Articles de Commande',
                'ordering': ['order', 'product_variant__product__name'],
            },
        ),
        migrations.CreateModel(
            name='Commission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_rate', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Taux de commission (%)')),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant de la commission')),
                ('is_paid_to_vendor', models.BooleanField(default=False, verbose_name='Montant vendeur versé')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commissions_earned', to='vendors.vendor')),
                ('order_item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commission', to='orders.orderitem')),
            ],
            options={
                'verbose_name': 'Commission',
                'verbose_name_plural': 'Commissions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.CharField(max_length=255, unique=True, verbose_name='ID de transaction')),
                ('payment_method', models.CharField(max_length=50, verbose_name='Méthode de paiement')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Montant payé')),
                ('currency', models.CharField(default='XOF', max_length=3, verbose_name='Devise')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('completed', 'Complété'), ('failed', 'Échoué'), ('refunded', 'Remboursé')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='orders.order')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('price_at_addition', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='orders.cart')),
                ('product_variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.productvariant')),
            ],
            options={
                'verbose_name': 'Article du Panier',
                'verbose_name_plural': 'Articles du Panier',
                'unique_together': {('cart', 'product_variant')},
            },
        ),
    ]
